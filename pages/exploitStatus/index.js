import {
  request
} from "../../request/index.js";
import {
  url
} from "../../request/url.js";
import navigateTo from "../../utils/navigateRoute.js";
import WeCropper from "../../components/we-cropper/we-cropper.js";
const device = wx.getSystemInfoSync(); // 获取设备信息
const width = device.windowWidth; // 示例为一个与屏幕等宽的正方形裁剪框
const devicePixelRatio = device.pixelRatio;
const height = device.windowHeight - 70;
const fs = (width / 750) * 2;
Page({
  data: {
    /**
     * 样衣
     */
    img_list: [],
    userName: "",
    we_cropper_active: false,
    antistopActive: false,
    MaterialsList: [],
    fileList: [],
    gradingList: [],
    paperpattern_del_list: [],
    scene_id: 0,
    touchstatus: 1,
    /**
     * 纸样
     */
    /**
     * 物料工艺
     */
    colorList: [
      ["无脊柱动物", "脊柱动物", "aa"],
      ["扁性动物", "线形动物", "环节动物", "软体动物", "节肢动物"],
    ],
    colorListSelece: [],
    colorIndex: [0, 0],
    color: "",
    color_name: "",
    card_length: 0,
    checkNum: 0,
    allCheck: false,
    cardList: [{
        materialsCard: "主料卡",
        materials: "主料",
        id: 3,
      },
      {
        materialsCard: "里料卡",
        materials: "里料",
        id: 4,
      },
      {
        materialsCard: "辅料卡",
        materials: "辅料",
        id: 5,
      },
      {
        materialsCard: "工艺卡",
        materials: "工艺",
        id: 6,
      },
    ],
    delListData: [],
    card: [],
    /**
     * 设计备注
     */
    DesignNoteActive: false,
    imgs: [],
    designidea: "",
    PATTEN_active: false,
    stylists: [],
    user_name: "",
    user_id: "",
    is_urgent: "",
    design_status: "",
    /** */
    obj: {},
    optionsId: "",
    /**
     * 版料采购
     */
    materials_procure_list: [],

    /**
     * 上传图片
     */
    we_cropper_active_status: "",
    cropperOpt: {
      id: "cropper",
      width: width, // 画布宽度
      height: height, // 画布高度
      scale: 2.5, // 最大缩放倍数
      zoom: 8, // 缩放系数
      cut: {
        x: (width - 250) / 2, // 裁剪框x轴起点(width * fs * 0.128) / 2
        y: height * 0.5 - 250 * 0.5, // 裁剪框y轴期起点
        width: 250, // 裁剪框宽度
        height: 250, // 裁剪框高度
      },
    },
    /**
     * 滑动tab
     */
    navData: [{
        text: "设计版单",
      },
      {
        text: "物料工艺",
      },
      {
        text: "版料采购",
      },
      {
        text: "纸样",
      },
      {
        text: "样衣",
      },
    ],
    currentTab: 0,
    navScrollLeft: 0 * 375,
    style_edit: "",
    style_del: "",
    get_style_design: "",
    materialProcesss: "",
    materialPurchasings: "",
    patternStatus: "",
    sampleDress: "",
    get_style_materials_list: "",
    project_style_color_add: "",
    project_style_materials_add: "",
    project_style_materials_del: "",
    style_purchase_add: "",
    project_style_materials_hfdel: "",
    project_style_color_del: "",
    get_style_purchase: "",
    style_purchase_del: "",
    purchase_edit: "",
    style_purchase_log_add: "",
    style_sample_add: "",
  },
  onShow: function () {
    let token = wx.getStorageSync("token");
    if (!token) {
      navigateTo(`/pages/login/index`);
      return;
    }

    let permission = wx.getStorageSync("permission").split(",");
    let style_edit = permission.indexOf("style_edit") != -1;
    let style_del = permission.indexOf("style_del") != -1;
    let get_style_design = permission.indexOf("get_style_design") != -1;
    let materialProcesss = permission.indexOf("materialProcess") != -1;
    let materialPurchasings = permission.indexOf("materialPurchasing") != -1;
    let patternStatus = permission.indexOf("patternStatus") != -1;
    let sampleDress = permission.indexOf("sampleDress") != -1;
    let get_style_materials_list =
      permission.indexOf("get_style_materials_list") != -1;
    let project_style_color_del =
      permission.indexOf("project_style_color_del") != -1;
    let project_style_color_add =
      permission.indexOf("project_style_color_add") != -1;
    let project_style_materials_add =
      permission.indexOf("project_style_materials_add") != -1;
    let project_style_materials_del =
      permission.indexOf("project_style_materials_del") != -1;
    let style_purchase_add = permission.indexOf("style_purchase_add") != -1;
    let project_style_materials_hfdel =
      permission.indexOf("project_style_materials_hfdel") != -1;
    let get_style_purchase = permission.indexOf("get_style_purchase") != -1;
    let style_purchase_del = permission.indexOf("style_purchase_del") != -1;
    let purchase_edit = permission.indexOf("purchase_edit") != -1;
    let style_purchase_log_add =
      permission.indexOf("style_purchase_log_add") != -1;
    let style_sample_add = permission.indexOf("style_sample_add") != -1;
    this.setData({
      permission,
      style_edit,
      style_del,
      get_style_design,
      materialProcesss,
      materialPurchasings,
      patternStatus,
      sampleDress,
      get_style_materials_list,
      project_style_materials_del,
      project_style_color_del,
      project_style_color_add,
      project_style_materials_add,
      style_purchase_add,
      project_style_materials_hfdel,
      get_style_purchase,
      style_purchase_del,
      purchase_edit,
      style_purchase_log_add,
      style_sample_add,
    });

    if (this.data.scene_id != 0) {
      let role = wx.getStorageSync("role");
      let currentTab = 0;
      let navScrollLeft = this.data.navScrollLeft;
      if (role == 3) {
        currentTab = currentTab + 3;
        navScrollLeft = navScrollLeft * 3;
      }
      if (role == 4) {
        currentTab = currentTab + 4;
        navScrollLeft = navScrollLeft * 4;
      }
      this.setData({
        currentTab,
        navScrollLeft,
      });
    }
    this.init();
    this.delListInit();
    this.getstylist();
    this.sampleInit();
    this.getColorSelect();

    // this.getStylePosition();
    // this.MaterialsInit();
    // this.get_pattern_list();
    // this.get_grading_file_list();
    // this.Delete_history_list();
  },
  //事件处理函数
  onLoad: function (options) {
    if (options.scene != undefined) {
      this.setData({
        optionsId: options.style_id,
        scene_id: options.style_id,
      });
      let token = wx.getStorageSync("token");
      if (!token) {
        navigateTo(`/pages/login/index`);
        return;
      }
    } else {
      this.setData({
        optionsId: options.id,
        color_name: options.color_name,
        currentTab: options.currentTab || this.data.currentTab,
        navScrollLeft: options.navScrollLeft || this.data.navScrollLeft,
      });
    }
    /**
     * 上传图片
     */
    const {
      cropperOpt
    } = this.data;
    this.cropper = new WeCropper(cropperOpt)
      .on("ready", (ctx) => {})
      .on("beforeImageLoad", (ctx) => {
        wx.showToast({
          title: "上传中",
          icon: "loading",
          duration: 20000,
        });
      })
      .on("imageLoad", (ctx) => {
        wx.hideToast();
      });
    this.wecropper.updateCanvas(); //刷新画面
    /**
     * 滑动tab
     */
    wx.getSystemInfo({
      success: (res) => {
        this.setData({
          pixelRatio: res.pixelRatio,
          windowHeight: res.windowHeight,
          windowWidth: res.windowWidth,
        });
      },
    });
  },
  /**
   * 纸样
   */

  /**
   * 版料采购
   */
  handleStyleMaterialsDel(e) {
    wx.showModal({
      title: "提示",
      content: "确认删除",
      success: async (result) => {
        if (result.confirm) {
          let res = await request({
            url: "style_purchase_del",
            method: "post",
            data: {
              id: e.currentTarget.dataset.item.id,
            },
          });
          wx.showToast({
            title: res.data.msg,
            icon: 'none',
          });
          if (res.data.error_code == 0) {
            this.materialPurchasing_init();
          }
        }
      },
      fail: () => {},
      complete: () => {},
    });
  },
  Purchasing_entry(e) {
    let item = e.currentTarget.dataset.item;
    navigateTo(
      `/pages/material_purchasing/index?materials_id=${item.materials_id}&id=${item.id}&style_id=${item.style_id}`
    );
  },
  go_lining_status(e) {
    let item = e.currentTarget.dataset.item1;
    navigateTo(
      `/pages/lining_status/index?materials_id=${item.materials_id}&id=${item.id}&style_id=${item.style_id}&style_color_name=${item.style_color_name}&log=${item.style_purchase_log_data}`
    );
  },
  go_lining_statuss(e) {
    let item = e.currentTarget.dataset.item1;
    navigateTo(
      `/pages/lining_status/index?materials_id=${item.materials_id}&id=${item.id}&style_id=${item.style_id}&style_color_name=${item.style_color_name}&log=${item.style_purchase_log_data}&ss=${item.style_purchase_log_data_length_ss}`
    );
  },
  async materialPurchasing_init() {
    if (this.data.obj.style_color_data.length > 0) {
      let res = await request({
        url: "get_materials_procure_list",
        method: "post",
        data: {
          style_id: this.data.obj.style_color_data[0].style_id,
          style_color_name: this.data.obj.style_color_data[0].style_color_name,
        },
      });
      if (res.data.data.length > 0) {
        res.data.data.map((v, i) => {
          v.style_materials_data.map((v1, i1) => {
            v1[
              "materials_mainclass_name_id"
            ] = v1.materials_mainclass_name.slice(0, 1);
            v1["style_purchase_log_data_length"] =
              v1.style_purchase_log_data.length;
            v1["style_purchase_log_data_length_ss"] = v1.state;
          });
        });
      }
      this.setData({
        materials_procure_list: res.data.data,
      });
    }
  },
  /**
   * 物料工艺
   */
  async restore(e) {
    let res = await request({
      url: "project_style_materials_hfdel",
      method: "post",
      data: {
        id: e.currentTarget.dataset.id
      },
    });
    wx.showToast({
      title: res.data.msg,
      icon: "none",
    });

    if (res.data.error_code == 0) {
      this.Materials_processInit();
      this.delListInit();
    }
  },
  async delListInit() {
    let res = await request({
      url: "get_style_materials_dellist",
      method: "post",
      data: {
        style_id: this.data.optionsId
      },
    });
    this.setData({
      delListData: res.data.data[0],
    });
  },
  color_close(e) {
    wx.showModal({
      title: "提示",
      content: "确认删除",
      success: async (result) => {
        if (result.confirm) {
          let res = await request({
            url: "project_style_color_del",
            method: "post",
            data: {
              style_id: this.data.optionsId,
              style_color_name: e.currentTarget.dataset.item.style_color_name,
            },
          });
          wx.showToast({
            title: res.data.msg,
            icon: 'none',
          });
          if (res.data.error_code == 0) {
            this.init();
          }
        }
      },
      fail: () => {},
      complete: () => {},
    });
  },
  purchaseOrder() {
    let style_materials_list_id_data = [];
    this.data.card.map((v, i) => {
      v.style_materials_data.map((v1, i1) => {
        if (v1.isCheck == true) {
          style_materials_list_id_data.push({
            id: v1.id,
          });
        }
      });
    });
    if (style_materials_list_id_data.length == 0) {
      wx.showToast({
        title: '请选择物料',
        icon: 'none',
      });
    } else {
      wx.showModal({
        title: "提示",
        content: "确认生成采购单?",
        success: async (result) => {
          if (result.confirm) {
            let res = await request({
              url: "style_purchase_add",
              method: "post",
              data: {
                style_id: this.data.optionsId,
                style_materials_list_id_data,
              },
            });
            wx.showToast({
              title: res.data.msg,
              icon: 'none',
            });
            if (res.data.error_code == 0) {
              this.setData({
                currentTab: 2,
                navScrollLeft: this.data.navScrollLeft * 2,
                checkNum: 0,
                allCheck: false,
              });
              this.materialPurchasing_init();
            }
          }
        },
        fail: () => {},
        complete: () => {},
      });
    }
  },
  handleCheck(e) {
    console.log(e.currentTarget.dataset.id);
    let {
      id
    } = e.currentTarget.dataset
    this.data.card.map((v, i) => {
      v.style_materials_data.map((v1, i1) => {
        if (id == v1.id) {
          v1.isCheck = !v1.isCheck
        }
      })
    });
    this.setData({
      card: this.data.card,
    });
    this.data.card.map((v, i) => {
      this.data.allCheck = v.style_materials_data.length ?
        v.style_materials_data.every((v1) => v1.isCheck) :
        false;
    });
    this.setData({
      allCheck: this.data.allCheck,
    });
  },
  handleAllCheck(e) {
    this.data.allCheck = !this.data.allCheck
    this.setData({
      allCheck: this.data.allCheck
    })
    this.data.card.map((v, i) => {
      v.style_materials_data.map((v1, i1) => {
        v1["isCheck"] = this.data.allCheck;
      });
    });
    this.setData({
      card: this.data.card,
    });
  },
  async bindColorSelect(e) {
    let item = e.currentTarget.dataset.item2;
    if (item.materials_color_data[e.detail.value].color == "添加颜色") {
      navigateTo(
        `/pages/materialProcessEdit/index?id=${item.materials_id}&back=1`
      );
    } else {
      let res = await request({
        url: "style_materials_list_color_edit",
        method: "post",
        data: {
          id: item.id,
          materials_color_id: item.materials_color_data[e.detail.value].id,
        },
      });
      this.init();
    }
  },
  handle_close_card(e) {
    wx.showModal({
      title: "提示",
      content: "确认删除",
      success: async (result) => {
        if (result.confirm) {
          let res = await request({
            url: "project_style_materials_del",
            method: "post",
            data: {
              id: e.currentTarget.dataset.id,
            },
          });
          if (res.data.error_code == 0) {
            this.init();
            this.delListInit();
            wx.showToast({
              title: "删除成功",
              icon: 'none',
            });
          }
        }
      },
      fail: () => {},
      complete: () => {},
    });
  },
  get_color_name(e) {
    if (e != undefined) {
      this.setData({
        color_name: e.currentTarget.dataset.name,
        allCheck: false,
        checkNum: 0,
      });
      this.Materials_processInit();
    } else {
      this.setData({
        color_name: this.data.color_name,
        allCheck: false,
        checkNum: 0,
      });
      this.Materials_processInit();
    }
  },
  async Materials_processInit() {
    let res = await request({
      url: "get_style_materials_list",
      method: "post",
      data: {
        style_id: this.data.optionsId,
        style_color_name: this.data.color_name,
      },
    });
    res.data.data.map((v, i) => {
      v.style_materials_data.map((v1, i1) => {
        v1.materials_color_data[v1.materials_color_data.length] = {
          color: "添加颜色",
        };
        v1["isCheck"] = false;
        v1["materials_mainclass_name_id"] = v1.materials_mainclass_name.slice(
          0,
          1
        );
      });
    });
    this.setData({
      card: res.data.data,
      card_length: res.data.data.length,
    });
  },
  bindMaterialsSelect(e) {
    navigateTo(
      `/pages/Material_process/index?id=${this.data.optionsId}&color=${
        e.currentTarget.dataset.name
      }&class_id=${this.data.cardList[e.detail.value].id}`
    );
  },
  async getColorSelect() {
    let res = await request({
      url: "get_color_select",
    });
    let colors = res.data.data;
    this.data.colorList[0] = colors.map((v) => {
      return v.color_name;
    });
    this.data.colorList[1] = colors[0].children.map((v, i) => {
      return v.color_name;
    });

    this.setData({
      colorList: this.data.colorList,
      colors,
    });
  },
  async bindColorPickerChange(e) {
    let style_id = this.data.optionsId;
    let style_color_name = this.data.colorList[1][this.data.colorIndex[1]];
    if (
      this.data.obj.style_color_data.length == 0 ||
      this.data.card_length == 0
    ) {
      let res = await request({
        url: "project_style_materials_list_add",
        method: "post",
        data: {
          style_id,
          style_color_name,
        },
      });
      this.init();
    }
    if (
      this.data.obj.style_color_data.length > 0 &&
      this.data.card_length > 0
    ) {
      navigateTo(
        `/pages/colorORmaterial/index?id=${style_id}&color=${style_color_name}`
      );
    }
  },
  bindColorPickerColumnChange: function (e) {
    var data = {
      colorList: this.data.colorList,
      colorListSelece: this.data.colorListSelece,
      colorIndex: this.data.colorIndex,
    };
    data.colorIndex[e.detail.column] = e.detail.value;
    if (e.detail.column == 0) {
      if (data.colorIndex[0] == e.detail.value) {
        data.colorList[1] = this.data.colors[e.detail.value].children.map(
          (v, i) => {
            return v.color_name;
          }
        );
      }
    }
    this.setData(data);
  },
  /**
   * 纸样
   */

  /**
   * 样衣
   */
  get_color_image() {
    this.setData({
      we_cropper_active: true,
      we_cropper_active_status: 0,
    });
    this.uploadTap();
  },

  async sampleDeleteImg(e) {
    let res = await request({
      url: "style_sample_del",
      method: "post",
      data: {
        id: e.currentTarget.dataset.id,
      },
    });
    this.sampleInit();
  },
  async sampleInit() {
    let res = await request({
      url: "style_sample_list",
      method: "post",
      data: {
        style_id: this.data.optionsId,
      },
    });
    this.data.img_list = res.data.data.map((v) => {
      return {
        url: v.picurl,
        id: v.id,
      };
    });
    this.setData({
      img_list: this.data.img_list,
    });
  },
  /**
   * 设计备注
   */
  async design_apply() {
    let res = await request({
      url: "design_apply",
      method: "post",
      data: {
        style_id: this.data.optionsId,
      },
    });
    this.init();
  },
  async cancel_design_apply() {
    let res = await request({
      url: "cancel_design_apply",
      method: "post",
      data: {
        style_id: this.data.optionsId,
      },
    });
    this.init();
  },
  styleUrgents() {
    wx.showModal({
      title: "提示",
      content: "确认加急?",
      success: async (result) => {
        let res = await request({
          url: "style_urgent",
          method: "post",
          data: {
            style_id: this.data.optionsId,
          },
        });
        if (!res.data.error_code) {
          this.setData({
            is_urgent: 1,
          });
          this.init();
        }
      },
    });
  },
  async bindUserSelect(e) {
    let res = await request({
      url: "push_pattern",
      method: "post",
      data: {
        style_id: this.data.optionsId,
        user_id: this.data.stylists[e.detail.value].id,
      },
    });
    if (res.data.error_code == 0) {
      this.setData({
        user_name: this.data.stylists[e.detail.value].name,
      });
      this.init();
    }
    wx.showToast({
      title: res.data.msg,
      icon: 'none',
    });
  },
  async getstylist() {
    let res = await request({
      url: "get_user_select",
      method: "post",
      data: {
        department_id: 2,
      },
    });
    let {
      data
    } = res.data;
    data.map((v) => {
      v["checked"] = false;
    });
    this.setData({
      stylists: data,
    });
  },
  designNoteInit() {
    if (this.data.obj.designidea_pic_data != undefined) {
      let imgs = this.data.obj.designidea_pic_data.map((v) => {
        return {
          url: v.designidea_pic_url,
          id: v.id,
        };
      });
      this.setData({
        imgs,
      });
    }
  },
  handleDesignNoteEdit() {
    this.setData({
      DesignNoteActive: true,
    });
  },
  async handleDesignNoteInfo() {
    this.init();
    this.setData({
      DesignNoteActive: false,
    });
    wx.pageScrollTo({
      scrollTop: 0,
    });
  },
  get_design_image() {
    let permission = wx.getStorageSync("permission").split(",");
    let style_designidea_pic_add =
      permission.indexOf("style_designidea_pic_add") != -1;
    if (style_designidea_pic_add) {
      this.setData({
        we_cropper_active: true,
        we_cropper_active_status: 1,
      });
      this.uploadTap();
    } else {
      wx.showToast({
        title: "无权操作",
        icon: "error",
      });
    }
  },
  async deleteImg(e) {
    let res = await request({
      url: "style_designidea_pic_del",
      method: "post",
      data: {
        id: e.currentTarget.dataset.id,
      },
    });
    this.init();
  },
  bindTabSelect(e) {
    if (e.currentTarget.dataset.name == "设计备注") {
      this.setData({
        tabName: "设计备注",
        touchstatus: 1,
      });
    }
    if (e.currentTarget.dataset.name == "纸样") {
      this.setData({
        tabName: "纸样",
        touchstatus: 2,
      });
    }
    if (e.currentTarget.dataset.name == "样衣") {
      this.setData({
        tabName: "样衣",
        touchstatus: 3,
      });
    }
  },
  handle_filing() {
    let design =
      this.data.obj.design_status < 5 ? "设计版单未完成" : "设计版单已完成";
    let materials =
      this.data.obj.materials_status < 4 ? "物料工艺未完成" : "物料工艺已完成";
    if (
      this.data.obj.design_status >= 5 &&
      this.data.obj.materials_status >= 4
    ) {
      wx.showModal({
        title: "提示",
        content: `${design}, ${materials},是否存档?`,
        success: async (result) => {
          if (result.confirm) {
            let res = await request({
              url: "style_file",
              method: "post",
              data: {
                id: this.data.optionsId,
              },
            });
            console.log(res);
            if (res.data.error_code === 0) {
              wx.showToast({
                title: res.data.msg,
                icon: 'none',
              });
              this.init();
            }
          }
          if (result.cancel) {
            wx.showToast({
              title: "已取消存档",
              icon: "none",
            });
          }
        },
      });
    } else {
      wx.showModal({
        title: `提示`,
        content: `${design},${materials},请先完成`,
        success: async (result) => {
          if (result.confirm) {}
        },
        fail: () => {},
        complete: () => {},
      });
    }
  },
  view_log() {
    this.data.log_active = !this.data.log_active;
    this.setData({
      log_active: this.data.log_active,
    });
  },
  go_edit() {
    navigateTo(`/pages/styleEdit/index?id=${this.data.optionsId}`);
  },
  async init() {
    let res = await request({
      url: "get_style",
      data: {
        id: this.data.optionsId,
      },
      method: "post",
    });
    this.setData({
      obj: res.data.data,
      ["obj.pattern_status"]: res.data.data.pattern_status,
      ["obj.is_urgent"]: res.data.data.is_urgent,
      design_status: res.data.data.design_status,
    });
    if (res.data.data.style_color_data.length > 0) {
      this.setData({
        color_name: this.data.color_name ||
          res.data.data.style_color_data[0].style_color_name,
      });
    }
    this.designNoteInit();
    this.Materials_processInit();
    this.materialPurchasing_init();
    this.get_color_name();
  },
  /**
   * 上传图片
   */
  touchStart(e) {
    this.cropper.touchStart(e);
  },
  touchMove(e) {
    this.cropper.touchMove(e);
  },
  touchEnd(e) {
    this.cropper.touchEnd(e);
  },
  closeTap() {
    this.setData({
      we_cropper_active: false,
    });
  },
  uploadTap() {
    const self = this;
    wx.chooseImage({
      count: 1, // 默认9
      sizeType: ["original", "compressed"], // 可以指定是原图还是压缩图，默认二者都有
      sourceType: ["album", "camera"], // 可以指定来源是相册还是相机，默认二者都有
      success(res) {
        const src = res.tempFilePaths[0];
        self.wecropper.pushOrign(src);
      },
    });
  },
  getCropperImage() {
    let that = this;
    wx.showToast({
      title: "上传中",
      icon: "loading",
      duration: 20000,
    });
    // 如果有需要两层画布处理模糊，实际画的是放大的那个画布
    this.wecropper.getCropperImage((src) => {
      if (src) {
        if (that.data.we_cropper_active_status == 0) {
          wx.uploadFile({
            url: `${url}/uploadpic.php`,
            filePath: src,
            name: "file",
            formData: {
              user: "test",
            },
            async success(res) {
              let data = JSON.parse(res.data);
              if (data.error_code === 0) {
                let res1 = await request({
                  url: "style_sample_add",
                  method: "post",
                  data: {
                    style_id: that.data.optionsId,
                    picurl: data.data.pic_file_url,
                  },
                });
                that.setData({
                  we_cropper_active: false,
                });
                wx.showToast({
                  title: data.msg,
                  duration: 1500,
                  mask: true,
                });
                wx.hideToast();
                that.sampleInit();
              }
            },
          });
        }
        if (that.data.we_cropper_active_status == 1) {
          wx.uploadFile({
            url: `${url}/uploadpic.php`,
            filePath: src,
            name: "file",
            formData: {
              user: "test",
            },
            async success(res) {
              let data = JSON.parse(res.data);
              if (data.error_code === 0) {
                let res1 = await request({
                  url: "style_designidea_pic_add",
                  method: "post",
                  data: {
                    style_id: that.data.optionsId,
                    picurl: data.data.pic_file_url,
                  },
                });
                that.setData({
                  we_cropper_active: false,
                });
                wx.showToast({
                  title: data.msg,
                  duration: 1500,
                  mask: true,
                });
                wx.hideToast();
                that.init();
              }
            },
          });
        }
      }
    });
  },
  /**
   * 滑动tab
   */
  switchNav(event) {
    var cur = event.currentTarget.dataset.current;
    //每个tab选项宽度占1/5
    var singleNavWidth = this.data.windowWidth / 1;
    //tab选项居中
    this.setData({
      navScrollLeft: (cur - 0) * singleNavWidth,
    });
    if (this.data.currentTab == cur) {
      return false;
    } else {
      this.setData({
        currentTab: cur,
        checkNum: 0,
        allCheck: false,
      });
    }
    wx.pageScrollTo({
      scrollTop: 0,
    });
    this.init();
  },
  switchTab(event) {
    var cur = event.detail.current;
    var singleNavWidth = this.data.windowWidth / 1;
    this.setData({
      currentTab: cur,
      navScrollLeft: (cur - 0) * singleNavWidth,
      checkNum: 0,
      allCheck: false,
    });
    wx.pageScrollTo({
      scrollTop: 0,
    });
    this.init();
  },
  onReady: function () {},
  onHide: function () {},
  onUnload: function () {},
  onPullDownRefresh: function () {},
  onReachBottom: function () {},
  onShareAppMessage: function () {},
  onPageScroll: function () {},
  //item(index,pagePath,text)
  onTabItemTap: function (item) {},
});